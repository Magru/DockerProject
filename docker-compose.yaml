services:
  polybot:
    image: ${POLYBOT_IMG_NAME}
    container_name: polybot
    env_file:
      - .env
    ports:
      - "8443:8443"
    networks:
      - mongoCluster
    tty: true
    stdin_open: true
    secrets:
      - telegram_bot_token

  bot-yolo5:
    image: ${YOLO5_IMG_NAME}
    container_name: bot-yolo5
    networks:
      - mongoCluster
    environment:
      - BUCKET_NAME=max-yolo5
      - MONGO_URI=mongodb://polybotservice-mongo1-1:27017,polybotservice-mongo1-2:27018,polybotservice-mongo1-3:27019/?replicaSet=mongoReplicaSet
    ports:
      - "8081:8081"
    depends_on:
      - mongo1

  mongo1:
    image: mongo:5
    hostname: mongo1
    ports:
      - "27017:27017"
    volumes:
      - mongo-data-1:/data/db
      - ./init-replica.sh:/docker-entrypoint-initdb.d/init-replica.sh
    networks:
      - mongoCluster
    command: bash -c "mongod --replSet mongoReplicaSet --bind_ip_all"

  mongo2:
    image: mongo:5
    hostname: mongo2
    ports:
      - "27018:27017"
    volumes:
      - mongo-data-2:/data/db
    networks:
      - mongoCluster
    command: mongod --replSet mongoReplicaSet --bind_ip_all
    depends_on:
      - mongo1

  mongo3:
    image: mongo:5
    hostname: mongo3
    ports:
      - "27019:27017"
    volumes:
      - mongo-data-3:/data/db
    networks:
      - mongoCluster
    command: mongod --replSet mongoReplicaSet --bind_ip_all --quiet
    depends_on:
      - mongo1
      - mongo2

  mongo-init-cluster:
    image: mongo:5
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongoCluster
    command: >
      bash -c "
        sleep 10;
        mongo mongo1:27017 --eval \"
          rs.initiate({
            _id: 'mongoReplicaSet',
            members: [
              { _id: 0, host: 'mongo1:27017' },
              { _id: 1, host: 'mongo2:27017' },
              { _id: 2, host: 'mongo3:27017' }
            ]
          });
        \"
      "

volumes:
  mongo-data-1:
  mongo-data-2:
  mongo-data-3:

networks:
  mongoCluster:
    driver: bridge

secrets:
   telegram_bot_token:
     file: telegram_bot_token.secret
   db_root_password:
     file: db_root_password.txt